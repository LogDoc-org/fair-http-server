fair {
  http {
    port = 9010

    //    statics { // секция, определящюая работу со статическими ресурсами. Если секции нет - сервер не будет обслуживать статику. По умолчанию сервер не обслуживает статику.
    //      root = ":classpath:/static" // указание на корневую директорию, где лежит статика.
    //      //      Если значение начинается с `:classpath:/` - считается, что весь контент содержится в classpath сервера и будет читаться как внутренние ресурсы JVM.
    //      //      Иначе - из файловой системы. В случае файловой системы путь может быть относительным.
    //      //      Указанная в параметре директория не попадает в path запроса, всё указанное в запросе будет считаться дочерней структурой от неё.
    //      //      Т.е. например, в параметре указано значение `/var/www/files`, http-запрос делается с path `/content/image_1.jpg` - это означает,
    //      //      что будет предпринята попытка прочитать из файловой системы ресурс с именем `/var/www/files/content/image_1.jpg`.
    //      //      Или, в случае с classpath, если в параметре указано значение `:classpath:/files`, http-запрос делается с path `/content/image_2.jpg` - это означает,
    //      //      что будет предпринята попытка прочитать из classpath ресурс с именем `/files/content/image_2.jpg`.
    //
    //
    //      auto_index = true // флаг, включающий авто-индексацию директорий. Если значение = false, то на запрос любой директории сервер будет возвращать 403 Forbidden, иначе - листинг этой директории
    //      index_files = ["index.html", "index.htm"] // имена файлов, которые считаются "индексами" и отдаются по умолчанию, если запрос сделан к директории. Умолчательное значение - null
    //
    //      map404_to = "/index.html"
    //      mapZZZ_to -- директива, которая мапит код ответа ZZZ на указанный ендпоинт. Код указывается числом от одной до трёх цифр - в зависимости от требуемой точности.
    //      Например, map404_to - будет мапить только ответы с кодом 404. map4_to - будет мапить все ответы с кодом >= 400 && < 500. map41_to - все ответы с кодом >= 410 && < 420
    //
    //      memory_cache { // кэширование статических файлов в память, для экономии I/O операций и/или времени на поиск ресурсов в classpath и/или листингах директорий
    //        enabled = true // включение/выключение кэширования. Умолчательное значение - false
    //        max_file_size = 512kB // максимальный размер файла для кэша, умолчательное значение - 128 kb
    //        lifetime = 3m // максимальное время жизни закэшированного значения, умолчательное значение - 3 минуты
    //      }
    //
    //      mime_types = [ // в обычном случае сервер пытается определить mime-type файла по его заголовку,
    //        // в данной секции можно переопределить это поведение для файлов с определёнными расширениеми
    //
    //        { // одна секция на один mime-тип
    //          mime = "application/svg+xml" // mime-type
    //          ext = [".svg", ".sv"] // соответствующие расширения
    //        }
    //        {
    //          mime = "font/woff2"
    //          ext = ".woff2"
    //        }
    //      ]
    //    }

    max_request_body = 10MB // максимальный размер запроса
    request_read_timeout_ms = 100
    handler_exec_timeout_sec = 180

    //    cors { // регуляция работы с CORS. Если секции нет - считается, что все запросы разрешены.
    //      allow_credentials = true // включение/выключение разрешения на авторизационные запросы. Умолчательное значение - true (разрешено)
    //
    //      origins = null // список разрешенных cross-origin источников. Умолчательное значение - "*"
    //      methods = [] // список разрешенных cross-origin методов запросов. Умолчательное значение - "*"
    //      headers = ["MY-X-KEY", "custom-header"] // список cross-origin разрешенных заголовков. Умолчательное значение - "*"
    //    }
  }

  preload {    // preload some modules
    //    load += com.company.class.<MyClass extends org.logdoc.fairhttp.service.api.helpers.Preloaded>
  }
}

//db { // простейший конфиг дб, с одним датасорсом
//  url = ""
//  username = ""
//  password = ""
//  driver = ""
//}

//db { // простой конфиг для мульти-источников
//  default { // умолчательный (неименованный) источник в конфиге должен называться default
//    url = ""
//    username = ""
//    password = ""
//    driver = ""
//  }
//
//  my_own_source { // именованный источник
//    url = ""
//    username = ""
//    password = ""
//    driver = ""
//  }
//}


//db { // полный конфиг с мультисорсами и собственными HikariCP конфигами (подробнее: https://github.com/brettwooldridge/HikariCP)
//  default {
//    url = ""
//    username = ""
//    password = ""
//    driver = ""
//
//    hikaricp {
//      dataSourceCLassName = ""
//
//      dataSource {
//        autoCommit = false
//        connectionTimeout = 25 // seconds
//        idleTimeout = 20 // seconds
//        maxLifetime = 20 // seconds
//
//        connectionTestQuery = "select 1"
//
//        poolName = "MyPool"
//        minimumIdle = 5
//        maximumPoolSize = 15
//
//        initializationFailTimeout = 500
//        isolateInternalQueries = false
//        allowPoolSuspension = false
//        readOnly = true
//        registerMbeans = false
//
//        connectionInitSql = "select current_schema()"
//        catalog = "/"
//        transactionIsolation = "TRANSACTION_REPEATABLE_READ"
//
//        validationTimeout = 5 // seconds
//        leakDetectionThreshold = 15 // seconds
//      }
//    }
//  }
//
//  my_second_ds {
//    url = ""
//    username = ""
//    password = ""
//    driver = ""
//
//    hikaricp.dataSourceCLassName = "com.company.DataSource"
//  }
//}
